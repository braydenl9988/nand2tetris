// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/b/RAM512.hdl
/**
 * Memory of 512 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    //// Replace this comment with your code.
    DMux8Way(in=load, sel=address[6..8], a=ram0, b=ram1, c=ram2, d=ram3, e=ram4, f=ram5, g=ram6, h=ram7);

    RAM64(in=in, load=ram0, address=address[0..5], out=ramOut0);
    RAM64(in=in, load=ram1, address=address[0..5], out=ramOut1);
    RAM64(in=in, load=ram2, address=address[0..5], out=ramOut2);
    RAM64(in=in, load=ram3, address=address[0..5], out=ramOut3);
    RAM64(in=in, load=ram4, address=address[0..5], out=ramOut4);
    RAM64(in=in, load=ram5, address=address[0..5], out=ramOut5);
    RAM64(in=in, load=ram6, address=address[0..5], out=ramOut6);
    RAM64(in=in, load=ram7, address=address[0..5], out=ramOut7);

    Mux8Way16(a=ramOut0, b=ramOut1, c=ramOut2, d=ramOut3, e=ramOut4, f=ramOut5, g=ramOut6, h=ramOut7, sel=address[6..8], out=out);
    
    
    
}
